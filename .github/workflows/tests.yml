name: FootballHub API CI Pipeline

on:
  push:
    branches: [main, feature/*]
    paths-ignore:  # Skip CI for non-code changes
      - 'README.md'
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13-alpine  # Lighter image for faster CI
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Add volume for persistent storage between steps
        volumes:
          - postgres-data:/var/lib/postgresql/data
    
    env:
      PYTHONPATH: ${{ github.workspace }}
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      PYTHONUNBUFFERED: 1  # For real-time test output

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'  # Cache pip dependencies for faster builds

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-xdist  # Added pytest-xdist for parallel tests

      - name: Run database migrations (if applicable)
        run: |
          # Uncomment if you're using Alembic or similar
          # alembic upgrade head

      - name: Run tests with coverage
        run: |
          pytest tests/unit/ \
            --cov=app \
            --cov-report=xml:coverage.xml \
            --cov-report=term \
            --junitxml=junit.xml \
            -n auto \  # Run tests in parallel
            -v

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage.xml
            junit.xml

      # Optional: Add coverage reporting to codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
